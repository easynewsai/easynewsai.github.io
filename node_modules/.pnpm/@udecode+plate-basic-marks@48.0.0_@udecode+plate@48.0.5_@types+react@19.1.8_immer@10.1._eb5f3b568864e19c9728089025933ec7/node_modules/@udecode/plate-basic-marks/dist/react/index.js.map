{"version":3,"sources":["../../src/react/index.ts","../../src/react/BasicMarksPlugin.tsx","../../src/lib/BaseBasicMarksPlugin.ts","../../src/lib/BaseBoldPlugin.ts","../../src/lib/BaseCodePlugin.ts","../../src/lib/BaseItalicPlugin.ts","../../src/lib/BaseStrikethroughPlugin.ts","../../src/lib/BaseSubscriptPlugin.ts","../../src/lib/BaseSuperscriptPlugin.ts","../../src/lib/BaseUnderlinePlugin.ts","../../src/react/BoldPlugin.tsx","../../src/react/CodePlugin.tsx","../../src/react/ItalicPlugin.tsx","../../src/react/StrikethroughPlugin.tsx","../../src/react/SubscriptPlugin.tsx","../../src/react/SuperscriptPlugin.tsx","../../src/react/UnderlinePlugin.tsx","../../src/react/SkipMarkPlugin.ts","../../src/lib/BaseSkipMarkPlugin.ts"],"sourcesContent":["/**\n * @file Automatically generated by barrelsby.\n */\n\nexport * from './BasicMarksPlugin';\nexport * from './BoldPlugin';\nexport * from './CodePlugin';\nexport * from './ItalicPlugin';\nexport * from './SkipMarkPlugin';\nexport * from './StrikethroughPlugin';\nexport * from './SubscriptPlugin';\nexport * from './SuperscriptPlugin';\nexport * from './UnderlinePlugin';\n","import { toPlatePlugin } from '@udecode/plate/react';\n\nimport { BaseBasicMarksPlugin } from '../lib/BaseBasicMarksPlugin';\nimport { BoldPlugin } from './BoldPlugin';\nimport { CodePlugin } from './CodePlugin';\nimport { ItalicPlugin } from './ItalicPlugin';\nimport { StrikethroughPlugin } from './StrikethroughPlugin';\nimport { SubscriptPlugin } from './SubscriptPlugin';\nimport { SuperscriptPlugin } from './SuperscriptPlugin';\nimport { UnderlinePlugin } from './UnderlinePlugin';\n\n/**\n * Enables support for basic marks:\n *\n * - Bold\n * - Code\n * - Italic\n * - Strikethrough\n * - Subscript\n * - Superscript\n * - Underline\n */\nexport const BasicMarksPlugin = toPlatePlugin(BaseBasicMarksPlugin, {\n  plugins: [\n    BoldPlugin,\n    CodePlugin,\n    ItalicPlugin,\n    StrikethroughPlugin,\n    SubscriptPlugin,\n    SuperscriptPlugin,\n    UnderlinePlugin,\n  ],\n});\n","import { createSlatePlugin } from '@udecode/plate';\n\nimport { BaseBoldPlugin } from './BaseBoldPlugin';\nimport { BaseCodePlugin } from './BaseCodePlugin';\nimport { BaseItalicPlugin } from './BaseItalicPlugin';\nimport { BaseStrikethroughPlugin } from './BaseStrikethroughPlugin';\nimport { BaseSubscriptPlugin } from './BaseSubscriptPlugin';\nimport { BaseSuperscriptPlugin } from './BaseSuperscriptPlugin';\nimport { BaseUnderlinePlugin } from './BaseUnderlinePlugin';\n\nexport const BaseBasicMarksPlugin = createSlatePlugin({\n  key: 'basicMarks',\n  plugins: [\n    BaseBoldPlugin,\n    BaseCodePlugin,\n    BaseItalicPlugin,\n    BaseStrikethroughPlugin,\n    BaseSubscriptPlugin,\n    BaseSuperscriptPlugin,\n    BaseUnderlinePlugin,\n  ],\n});\n","import { createSlatePlugin, someHtmlElement } from '@udecode/plate';\n\n/** Enables support for bold formatting */\nexport const BaseBoldPlugin = createSlatePlugin({\n  key: 'bold',\n  node: { isLeaf: true },\n  parsers: {\n    html: {\n      deserializer: {\n        rules: [\n          { validNodeName: ['STRONG', 'B'] },\n          {\n            validStyle: {\n              fontWeight: ['600', '700', 'bold'],\n            },\n          },\n        ],\n        query: ({ element }) =>\n          !someHtmlElement(\n            element,\n            (node) => node.style.fontWeight === 'normal'\n          ),\n      },\n    },\n  },\n});\n","import { createSlatePlugin, findHtmlParentElement } from '@udecode/plate';\n\n/** Enables support for code formatting */\nexport const BaseCodePlugin = createSlatePlugin({\n  key: 'code',\n  node: { isLeaf: true },\n  parsers: {\n    html: {\n      deserializer: {\n        rules: [\n          { validNodeName: ['CODE'] },\n          { validStyle: { fontFamily: 'Consolas' } },\n        ],\n        query({ element }) {\n          const blockAbove = findHtmlParentElement(element, 'P');\n\n          if (blockAbove?.style.fontFamily === 'Consolas') return false;\n\n          return !findHtmlParentElement(element, 'PRE');\n        },\n      },\n    },\n  },\n});\n","import { createSlatePlugin, someHtmlElement } from '@udecode/plate';\n\n/** Enables support for italic formatting. */\nexport const BaseItalicPlugin = createSlatePlugin({\n  key: 'italic',\n  node: { isLeaf: true },\n  parsers: {\n    html: {\n      deserializer: {\n        rules: [\n          { validNodeName: ['EM', 'I'] },\n          { validStyle: { fontStyle: 'italic' } },\n        ],\n        query: ({ element }) =>\n          !someHtmlElement(\n            element,\n            (node) => node.style.fontStyle === 'normal'\n          ),\n      },\n    },\n  },\n});\n","import { createSlatePlugin, someHtmlElement } from '@udecode/plate';\n\n/** Enables support for strikethrough formatting. */\nexport const BaseStrikethroughPlugin = createSlatePlugin({\n  key: 'strikethrough',\n  node: { isLeaf: true },\n  parsers: {\n    html: {\n      deserializer: {\n        rules: [\n          { validNodeName: ['S', 'DEL', 'STRIKE'] },\n          { validStyle: { textDecoration: 'line-through' } },\n        ],\n        query: ({ element }) =>\n          !someHtmlElement(\n            element,\n            (node) => node.style.textDecoration === 'none'\n          ),\n      },\n    },\n  },\n});\n","import { createSlatePlugin } from '@udecode/plate';\n\n/** Enables support for subscript formatting. */\nexport const BaseSubscriptPlugin = createSlatePlugin({\n  key: 'subscript',\n  node: { isLeaf: true },\n  parsers: {\n    html: {\n      deserializer: {\n        rules: [\n          { validNodeName: ['SUB'] },\n          { validStyle: { verticalAlign: 'sub' } },\n        ],\n      },\n    },\n  },\n});\n","import { createSlatePlugin } from '@udecode/plate';\n\n/** Enables support for superscript formatting. */\nexport const BaseSuperscriptPlugin = createSlatePlugin({\n  key: 'superscript',\n  node: { isLeaf: true },\n  parsers: {\n    html: {\n      deserializer: {\n        rules: [\n          { validNodeName: ['SUP'] },\n          { validStyle: { verticalAlign: 'super' } },\n        ],\n      },\n    },\n  },\n});\n","import { createSlatePlugin, someHtmlElement } from '@udecode/plate';\n\n/** Enables support for underline formatting. */\nexport const BaseUnderlinePlugin = createSlatePlugin({\n  key: 'underline',\n  node: { isLeaf: true },\n  parsers: {\n    html: {\n      deserializer: {\n        rules: [\n          { validNodeName: ['U'] },\n          { validStyle: { textDecoration: ['underline'] } },\n        ],\n        query: ({ element }) =>\n          !someHtmlElement(\n            element,\n            (node) => node.style.textDecoration === 'none'\n          ),\n      },\n    },\n  },\n});\n","import { Key, toPlatePlugin } from '@udecode/plate/react';\n\nimport { BaseBoldPlugin } from '../lib/BaseBoldPlugin';\n\nexport const BoldPlugin = toPlatePlugin(BaseBoldPlugin, ({ editor, type }) => ({\n  shortcuts: {\n    toggleBold: {\n      keys: [[Key.Mod, 'b']],\n      preventDefault: true,\n      handler: () => {\n        editor.tf.toggleMark(type);\n      },\n    },\n  },\n}));\n","import { Key, toPlatePlugin } from '@udecode/plate/react';\n\nimport { BaseCodePlugin } from '../lib/BaseCodePlugin';\n\nexport const CodePlugin = toPlatePlugin(BaseCodePlugin, ({ editor, type }) => ({\n  shortcuts: {\n    toggleCode: {\n      keys: [[Key.Mod, 'e']],\n      preventDefault: true,\n      handler: () => {\n        editor.tf.toggleMark(type);\n      },\n    },\n  },\n}));\n","import { Key, toPlatePlugin } from '@udecode/plate/react';\n\nimport { BaseItalicPlugin } from '../lib/BaseItalicPlugin';\n\nexport const ItalicPlugin = toPlatePlugin(\n  BaseItalicPlugin,\n  ({ editor, type }) => ({\n    shortcuts: {\n      toggleItalic: {\n        keys: [[Key.Mod, 'i']],\n        preventDefault: true,\n        handler: () => {\n          editor.tf.toggleMark(type);\n        },\n      },\n    },\n  })\n);\n","import { Key, toPlatePlugin } from '@udecode/plate/react';\n\nimport { BaseStrikethroughPlugin } from '../lib/BaseStrikethroughPlugin';\n\nexport const StrikethroughPlugin = toPlatePlugin(\n  BaseStrikethroughPlugin,\n  ({ editor, type }) => ({\n    shortcuts: {\n      toggleStrikethrough: {\n        keys: [[Key.Mod, Key.Shift, 'x']],\n        preventDefault: true,\n        handler: () => {\n          editor.tf.toggleMark(type);\n        },\n      },\n    },\n  })\n);\n","import { Key, toPlatePlugin } from '@udecode/plate/react';\n\nimport { BaseSubscriptPlugin } from '../lib/BaseSubscriptPlugin';\nimport { SuperscriptPlugin } from './SuperscriptPlugin';\n\nexport const SubscriptPlugin = toPlatePlugin(\n  BaseSubscriptPlugin,\n  ({ editor, type }) => ({\n    shortcuts: {\n      toggleSubscript: {\n        keys: [[Key.Mod, 'comma']],\n        preventDefault: true,\n        handler: () => {\n          editor.tf.toggleMark(type, {\n            remove: editor.getType(SuperscriptPlugin),\n          });\n        },\n      },\n    },\n  })\n);\n","import { Key, toPlatePlugin } from '@udecode/plate/react';\n\nimport { BaseSuperscriptPlugin } from '../lib/BaseSuperscriptPlugin';\nimport { SubscriptPlugin } from './SubscriptPlugin';\n\nexport const SuperscriptPlugin = toPlatePlugin(\n  BaseSuperscriptPlugin,\n  ({ editor, type }) => ({\n    shortcuts: {\n      toggleSuperscript: {\n        keys: [[Key.Mod, 'period']],\n        preventDefault: true,\n        handler: () => {\n          editor.tf.toggleMark(type, {\n            remove: editor.getType(SubscriptPlugin),\n          });\n        },\n      },\n    },\n  })\n);\n","import { Key, toPlatePlugin } from '@udecode/plate/react';\n\nimport { BaseUnderlinePlugin } from '../lib/BaseUnderlinePlugin';\n\nexport const UnderlinePlugin = toPlatePlugin(\n  BaseUnderlinePlugin,\n  ({ editor, type }) => ({\n    shortcuts: {\n      toggleUnderline: {\n        keys: [[Key.Mod, 'u']],\n        preventDefault: true,\n        handler: () => {\n          editor.tf.toggleMark(type);\n        },\n      },\n    },\n  })\n);\n","import { toPlatePlugin } from '@udecode/plate/react';\n\nimport { BaseSkipMarkPlugin } from '../lib/BaseSkipMarkPlugin';\n\nexport const SkipMarkPlugin = toPlatePlugin(BaseSkipMarkPlugin);\n","import {\n  type PluginConfig,\n  type Text,\n  createTSlatePlugin,\n  RangeApi,\n  TextApi,\n} from '@udecode/plate';\n\nexport type SkipMarkConfig = PluginConfig<\n  'skip-mark',\n  {\n    query: {\n      allow: string[];\n    };\n  }\n>;\n\nexport const BaseSkipMarkPlugin = createTSlatePlugin<SkipMarkConfig>({\n  key: 'skip-mark',\n  options: {\n    query: {\n      allow: [],\n    },\n  },\n}).overrideEditor(({ editor, getOption, tf: { insertText } }) => ({\n  transforms: {\n    insertText(text, options) {\n      if (RangeApi.isExpanded(editor.selection))\n        return insertText(text, options);\n\n      const allow = getOption('query').allow;\n\n      const textNode = editor.api.node<Text>({\n        mode: 'lowest',\n        match: (node) => {\n          if (TextApi.isText(node)) {\n            return allow.some((key) => !!node[key]);\n          }\n        },\n      });\n\n      if (!textNode) return insertText(text, options);\n\n      const nextPoint = editor.api.start(textNode[1], { next: true });\n\n      const nextNode =\n        nextPoint &&\n        editor.api.node<Text>({\n          at: nextPoint,\n          mode: 'lowest',\n          match: (node) => {\n            if (TextApi.isText(node)) {\n              return allow.some((key) => !!node[key]);\n            }\n          },\n        });\n\n      const isBetweenSameMarks =\n        nextNode &&\n        allow.findIndex((key) => !!textNode[0][key]) ===\n          allow.findIndex((key) => !!nextNode[0][key]);\n\n      if (\n        !isBetweenSameMarks &&\n        editor.api.isEnd(editor.selection?.focus, textNode[1])\n      ) {\n        editor.tf.removeMarks(allow);\n        insertText(text, options);\n\n        return;\n      }\n\n      return insertText(text, options);\n    },\n  },\n}));\n"],"mappings":"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","names":["import_react","import_plate","import_plate","import_plate","import_plate","import_plate","import_plate","import_plate","import_react","import_react","import_react","import_react","import_react","import_react","import_react","import_plate"]}