{"version":3,"sources":["../../src/react/index.ts","../../src/react/createNodeHOC.tsx","../../src/react/createNodesHOC.tsx","../../src/react/useEditorString.ts","../../src/react/useFormInputProps.ts","../../src/react/useMarkToolbarButton.ts","../../src/react/usePlaceholder.ts","../../src/react/useRemoveNodeButton.ts","../../src/react/useSelection.ts","../../src/react/useSelectionFragment.ts"],"sourcesContent":["/**\n * @file Automatically generated by barrelsby.\n */\n\nexport * from './createNodeHOC';\nexport * from './createNodesHOC';\nexport * from './useEditorString';\nexport * from './useFormInputProps';\nexport * from './useMarkToolbarButton';\nexport * from './usePlaceholder';\nexport * from './useRemoveNodeButton';\nexport * from './useSelection';\nexport * from './useSelectionFragment';\n","import React from 'react';\n\nimport type { PlateElementProps } from '@udecode/plate-core/react';\n\nexport const createNodeHOC =\n  <T,>(HOC: React.FC<T>) =>\n  (Component: any, props: Omit<T, keyof PlateElementProps>) =>\n    function hoc(childrenProps: PlateElementProps) {\n      return (\n        <HOC {...({ ...childrenProps, ...props } as T)}>\n          <Component {...childrenProps} />\n        </HOC>\n      );\n    };\n","import type { AnyObject } from '@udecode/utils';\n\nimport castArray from 'lodash/castArray.js';\nimport merge from 'lodash/merge.js';\n\nimport { createNodeHOC } from './createNodeHOC';\n\nexport type CreateHOCOptions<T> = {\n  /** Set HOC by key. */\n  key?: string;\n  /** Set HOC by key. */\n  keys?: string[];\n} & AnyObject &\n  Partial<T>;\n\nconst createHOC = <T,>(withHOC: any) => {\n  return (\n    components: any,\n    options: CreateHOCOptions<T> | CreateHOCOptions<T>[]\n  ) => {\n    const _components = { ...components };\n    const optionsByKey: any = {};\n\n    const optionsList = castArray<CreateHOCOptions<T>>(options);\n\n    optionsList.forEach(({ key, keys, ...opt }) => {\n      const _keys: string[] = key ? [key] : (keys ?? Object.keys(_components));\n\n      _keys.forEach((_key) => {\n        optionsByKey[_key] = merge(optionsByKey[_key], opt);\n      });\n    });\n\n    Object.keys(optionsByKey).forEach((key) => {\n      if (!_components[key]) return;\n\n      _components[key] = withHOC(_components[key], optionsByKey[key]);\n    });\n\n    return _components;\n  };\n};\n\n/** Create components HOC by plugin key. */\nexport const createNodesHOC = <T,>(HOC: React.FC<T>) => {\n  return createHOC<T>(createNodeHOC(HOC));\n};\n\n/** Create components HOC by plugin key with a custom HOC. */\nexport const createNodesWithHOC = <T,>(\n  withHOC: (component: any, props: T) => any\n) => {\n  return createHOC<T>(withHOC);\n};\n","import { useEditorSelector } from '@udecode/plate-core/react';\n\nexport const useEditorString = () => {\n  return useEditorSelector((editor) => editor.api.string([]), []);\n};\n","interface InputProps {\n  /**\n   * Should we activate the onKeyDownCapture handler to preventDefault when the\n   * user presses enter?\n   */\n  preventDefaultOnEnterKeydown?: boolean;\n}\n\n/**\n * Hook to allow the user to spread a set of predefined props to the Div wrapper\n * of an Input element\n *\n * @param param0 An options object which can be expanded to add further\n *   functionality\n * @returns A props object which can be spread onto the element\n */\nexport const useFormInputProps = (options?: InputProps) => {\n  // Nothing provided to just return an empty object which can still be spread.\n  // If we need to add more functionality later we will still be able to do so\n  if (!options) return { props: {} };\n\n  // Destructure our options so we can use them\n  const { preventDefaultOnEnterKeydown } = options;\n\n  /**\n   * Handle the keydown capture event and prevent the default behaviour when the\n   * user presses enter.\n   *\n   * In the event the user presses enter on a field such as a link, prior to\n   * filling in both label and url, the default behaviour is to submit the form.\n   * This, ultimately, results in no link being added as you need to fill both\n   * fields to pass validation.\n   *\n   * By calling preventDefault we short circuit the form's submission thus\n   * allowing the user to continue filling in the other fields\n   *\n   * @param e The original event which was provided by the VDOM implement their\n   *   own behaviour on this event\n   */\n  const handleEnterKeydownCapture = (\n    e: React.KeyboardEvent<HTMLDivElement>\n  ) => {\n    // Prevent the form from submitting\n    if (e.key === 'Enter' || e.keyCode === 13) {\n      e.preventDefault();\n    }\n  };\n\n  return {\n    props: {\n      onKeyDownCapture: preventDefaultOnEnterKeydown\n        ? (e: React.KeyboardEvent<HTMLDivElement>) =>\n            handleEnterKeydownCapture(e)\n        : undefined,\n    },\n  };\n};\n","import { useEditorRef, useEditorSelector } from '@udecode/plate-core/react';\n\nexport const useMarkToolbarButtonState = ({\n  clear,\n  nodeType,\n}: {\n  nodeType: string;\n  clear?: string[] | string;\n}) => {\n  const pressed = useEditorSelector(\n    (editor) => editor.api.hasMark(nodeType),\n    [nodeType]\n  );\n\n  return {\n    clear,\n    nodeType,\n    pressed,\n  };\n};\n\nexport const useMarkToolbarButton = (\n  state: ReturnType<typeof useMarkToolbarButtonState>\n) => {\n  const editor = useEditorRef();\n\n  return {\n    props: {\n      pressed: state.pressed,\n      onClick: () => {\n        editor.tf.toggleMark(state.nodeType, { remove: state.clear });\n        editor.tf.focus();\n      },\n      onMouseDown: (e: React.MouseEvent<HTMLButtonElement>) => {\n        e.preventDefault();\n      },\n    },\n  };\n};\n","import {\n  type PlateElementProps,\n  useComposing,\n  useEditorRef,\n  useFocused,\n  useSelected,\n} from '@udecode/plate-core/react';\nimport { type QueryNodeOptions, queryNode } from '@udecode/slate';\n\nexport interface PlaceholderProps extends PlateElementProps {\n  placeholder: string;\n  hideOnBlur?: boolean;\n  query?: QueryNodeOptions;\n}\n\nexport const usePlaceholderState = ({\n  element,\n  hideOnBlur = true,\n  path,\n  query,\n}: PlaceholderProps) => {\n  const focused = useFocused();\n  const selected = useSelected();\n  const composing = useComposing();\n  const editor = useEditorRef();\n\n  const isEmptyBlock = editor.api.isEmpty(element) && !composing;\n\n  const enabled =\n    isEmptyBlock &&\n    (!query || queryNode([element, path!], query)) &&\n    (!hideOnBlur ||\n      (editor.api.isCollapsed() && hideOnBlur && focused && selected));\n\n  return {\n    enabled,\n  };\n};\n","import type { TElement } from '@udecode/slate';\n\nimport { useEditorRef } from '@udecode/plate-core/react';\n\nexport const useRemoveNodeButton = ({ element }: { element: TElement }) => {\n  const editor = useEditorRef();\n\n  return {\n    props: {\n      onClick: () => {\n        const path = editor.api.findPath(element);\n\n        editor.tf.removeNodes({ at: path });\n      },\n      onMouseDown: (e: React.MouseEvent<HTMLButtonElement>) => {\n        e.preventDefault();\n      },\n    },\n  };\n};\n","import { useEditorSelector } from '@udecode/plate-core/react';\n\nexport function useSelectionCollapsed() {\n  return useEditorSelector((editor) => !editor.api.isExpanded(), []);\n}\n\nexport function useSelectionExpanded() {\n  return useEditorSelector((editor) => editor.api.isExpanded(), []);\n}\n\nexport function useSelectionWithinBlock() {\n  return useEditorSelector((editor) => editor.api.isAt({ block: true }), []);\n}\n\nexport function useSelectionAcrossBlocks() {\n  return useEditorSelector((editor) => editor.api.isAt({ blocks: true }), []);\n}\n","import type { EditorPropOptions, TElement } from '@udecode/slate';\n\nimport { useEditorSelector } from '@udecode/plate-core/react';\n\nexport const useSelectionFragment = (options?: {\n  structuralTypes?: string[];\n}) => {\n  return useEditorSelector((editor) => {\n    return editor.api.fragment(editor.selection, options);\n  }, []);\n};\n\nexport const useSelectionFragmentProp = ({\n  structuralTypes,\n  ...options\n}: { structuralTypes?: string[] } & Omit<EditorPropOptions, 'nodes'> = {}) => {\n  return useEditorSelector((editor) => {\n    const fragment = editor.api.fragment<TElement>(editor.selection, {\n      structuralTypes,\n    });\n\n    return editor.api.prop({ nodes: fragment, ...options });\n  }, []);\n};\n"],"mappings":"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","names":["React","castArray","merge","import_react","import_react","import_react","import_react","import_react","import_react"]}