import * as React from 'react';
import { type VariantProps } from 'class-variance-authority';
export declare const buttonVariants: (props?: {
    isMenu?: boolean;
    size?: "default" | "none" | "icon" | "sm" | "lg" | "sms" | "xs";
    variant?: "default" | "link" | "secondary" | "ghost" | "outline" | "destructive" | "inlineLink";
} & import("class-variance-authority/types").ClassProp) => string;
export declare const Button: React.ForwardRefExoticComponent<Omit<React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, "ref"> & {
    asChild?: boolean;
} & VariantProps<(props?: {
    isMenu?: boolean;
    size?: "default" | "none" | "icon" | "sm" | "lg" | "sms" | "xs";
    variant?: "default" | "link" | "secondary" | "ghost" | "outline" | "destructive" | "inlineLink";
} & import("class-variance-authority/types").ClassProp) => string> & React.RefAttributes<HTMLButtonElement>>;
