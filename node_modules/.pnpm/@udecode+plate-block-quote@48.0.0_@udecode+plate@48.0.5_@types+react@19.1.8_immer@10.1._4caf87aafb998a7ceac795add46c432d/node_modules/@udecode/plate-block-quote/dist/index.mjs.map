{"version":3,"sources":["../src/lib/BaseBlockquotePlugin.ts","../src/lib/withBlockquote.ts"],"sourcesContent":["import { createSlatePlugin } from '@udecode/plate';\n\nimport { withBlockquote } from './withBlockquote';\n\n/** Enables support for block quotes, useful for quotations and passages. */\nexport const BaseBlockquotePlugin = createSlatePlugin({\n  key: 'blockquote',\n  node: { isElement: true },\n  parsers: {\n    html: {\n      deserializer: {\n        rules: [\n          {\n            validNodeName: 'BLOCKQUOTE',\n          },\n        ],\n      },\n    },\n  },\n}).overrideEditor(withBlockquote);\n","import type { OverrideEditor, TElement } from '@udecode/plate';\n\nimport { BaseBlockquotePlugin } from './BaseBlockquotePlugin';\n\nexport const withBlockquote: OverrideEditor = ({\n  api: { shouldMergeNodesRemovePrevNode },\n}) => ({\n  api: {\n    shouldMergeNodesRemovePrevNode(prevNodeEntry, curNodeEntry) {\n      const prevNode = prevNodeEntry[0] as TElement;\n\n      if (prevNode.type === BaseBlockquotePlugin.key) return false;\n\n      return shouldMergeNodesRemovePrevNode(prevNodeEntry, curNodeEntry);\n    },\n  },\n});\n"],"mappings":";AAAA,SAAS,yBAAyB;;;ACI3B,IAAM,iBAAiC,CAAC;AAAA,EAC7C,KAAK,EAAE,+BAA+B;AACxC,OAAO;AAAA,EACL,KAAK;AAAA,IACH,+BAA+B,eAAe,cAAc;AAC1D,YAAM,WAAW,cAAc,CAAC;AAEhC,UAAI,SAAS,SAAS,qBAAqB,IAAK,QAAO;AAEvD,aAAO,+BAA+B,eAAe,YAAY;AAAA,IACnE;AAAA,EACF;AACF;;;ADXO,IAAM,uBAAuB,kBAAkB;AAAA,EACpD,KAAK;AAAA,EACL,MAAM,EAAE,WAAW,KAAK;AAAA,EACxB,SAAS;AAAA,IACP,MAAM;AAAA,MACJ,cAAc;AAAA,QACZ,OAAO;AAAA,UACL;AAAA,YACE,eAAe;AAAA,UACjB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF,CAAC,EAAE,eAAe,cAAc;","names":[]}